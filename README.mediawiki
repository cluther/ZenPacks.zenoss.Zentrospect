This ZenPack provides support for monitoring Zenoss servers. Specifically at this point this means monitoring Zenoss servers that have the [https://github.com/cluther/zenoss-snmp-module zenoss-snmp-module] extension to Net-SNMP installed to expose internal process metrics via SNMP.

== Gallery ==
<gallery widths=250px heights=127px>
Zentrospect_Metrics.png
Zentrospect_Modeler_Plugin.png
Zentrospect_Processes.png
Zentrospect_Systems.png
</gallery>

== Features ==

The features added by this ZenPack can be summarized as follows. They are detailed further below.

* Discovery of Zenoss systems, processes and metrics thereof.
* Monitoring of process metric values.
* Monitoring of process metric freshness.

=== Discovery ===

The following entities will be automatically discovered from server devices that are running Zenoss, have the ''zenoss.snmp.ZenossSNMP'' modeler plugin assigned, and have the ''zenoss-snmp-module'' extension to Net-SNMP installed and configured properly.

;Zenoss Systems
: Attributes: Name
: Collections: Zenoss Processes, Zenoss Metrics

;Zenoss Processes
: Attributes: Name, System
: Collections: Zenoss Metrics

;Zenoss Metrics
: Attributes: Name, System, Process

=== Monitoring ===

The following metrics will be collected every 5 minutes by default.

;Metrics
: Metrics: zenProcessMetricValue, zenProcessMetricCyclesSinceUpdate

''zenProcessMetricValue'' is the most recent value recorded for the metric. It will be NaN in cases where a value hasn't been recorded recently.

''zenProcessMetricCyclesSinceUpdate'' is how many "cycle intervals" it has been since the value was successfully recorded. This measure is used because some metrics are updated on different cycle intervals. For example, if the localhost-zenperfsnmp-devices metric is updated every 300 seconds and was last updated 30 seconds ago, the zenProcessMetricCyclesSinceUpdate value will be 0.1.

By default a maximum threshold of 2 is set for zenProcessMetricCyclesSinceUpdate on all discovered metrics. This can be used to identify Zenoss processes that are not functioning properly.

=== Service Impact ===

When combined with the Zenoss Service Dynamics product, this ZenPack adds service impact capability for the entities it discovers. The following service impact relationships are automatically added. These will be included in any services that contain one or more of the explicitly mentioned entities.

;Service Impact Relationships
: A ''Device'' failure impacts all associated ''Zenoss Systems''.
: A ''Zenoss System'' failure impacts all associated ''Zenoss Processes''.
: A ''Zenoss Process'' failure impacts all associated ''Zenoss Metrics''.

== Usage ==

To make use of this ZenPack you must first install [https://github.com/cluther/zenoss-snmp-module zenoss-snmp-module] on your Zenoss server(s). It provides valuable information on any server running Zenoss processes. This includes masters, hubs and collectors.

You must then assign the ''zenoss.snmp.ZenossSNMP'' modeler plugin that comes with this ZenPack to any devices that have ''zenoss-snmp-module'' installed. The devices must then be remodeled.

=== Configuring Metric Modeling ===

Sometimes it is not desired to model every metric reported by ''zenoss-snmp-module''. One very common case is the metrics reported by the zendisc daemon. Ordinarily zendisc does not run frequently or as a daemon, so its metrics will always be stale and throw a warning event.

To prevent certain metrics from being modeled you can use the <tt>zZentrospectIgnoreMetrics</tt> configuration property. Its value is evaluated as a regular expression for every metric that the modeler plugin discovers. By default it is set to <tt>zendisc</tt> so as to avoid modeling the zendisc processes mentioned above.

=== Configuring Monitoring ===

By default you will find that the same <tt>ZentrospectMetric</tt> monitoring template is bound to every discovered metric. This results in all metrics being monitored in the same way. Any changes made to this monitoring template will apply to all metrics.

Sometimes it is desirable to monitor metrics differently. While this can be done using the normal process of creating local copies of the <tt>ZentrospectMetric</tt> monitoring template for each metric, that can become tedious and work can be lost if the metric in question is removed and replaced by modeling. In these cases you can create new monitoring templates to apply to as wide or narrow a subset of metrics as you want.

Take a metric named ''z-localhost-zenperfsnmp-devices'' as an example. Zenoss will attempt to bind monitoring templates by the following names in order until it finds a monitoring template that matches.

# ZentrospectMetric-localhost-zenperfsnmp-devices
# ZentrospectMetric-zenperfsnmp-devices
# ZentrospectMetric-localhost-devices
# ZentrospectMetric-localhost-zenperfsnmp
# ZentrospectMetric-devices
# ZentrospectMetric-zenperfsnmp
# ZentrospectMetric-localhost

As you can see, it goes from most specific to least specific. So if you want to change the way the devices metric for zenperfsnmp is monitored across all collectors, you'd copy the <tt>ZentrospectMetric</tt> template to <tt>ZentrospectMetric-zenperfsnmp-devices</tt> and make the desired adjustments on the new template. 

== Installed Items ==

Installing this ZenPack will add the following items to your Zenoss system.

;Configuration Properties
* zZentrospectIgnoreMetrics: Regex of metrics to ignore during modeling. Defaults to ''zendisc'' because zendisc is not a daemon and doesn't provide regular metrics.

;Modeler Plugins
* zenoss.snmp.ZenossSNMP

;Monitoring Templates
* ZentrospectMetric (in /)

;Component Types
* Zenoss Systems (on any device)
* Zenoss Processes (on Zenoss System components)
* Zenoss Metrics (on Zenoss Process components)
